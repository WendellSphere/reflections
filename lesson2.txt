USEFUL COMMANDS - Git
& Reflections

git log
git checkout - checkout commits or branches
git diff (orignal file, new file)
git clone 
git status - acts on working directory
git add - add files to staging area
git init - create new directory
git log --stat   //gives stats on changes of files for each commit
git diff --staged  //comapres staging area to commits
git diff (no arguments)  //comapres working directory to staging area
git branch (no arguments)  //shows branches, current branch
git branch   // adds new branch to master branch
git log --graph --oneline master    //shows diagram of branches

What happens when you initialize a repository?
Why do you need to do it?
the current directory becomes a repositotry after
running the git init. We need to do this
to track commits and probably there's
required implications with plugins
running programs.

How is the staging area different from
the working directory and the repository? 
What value do you think it offers?
staging area is the area where commits to be
reside. repository tracks the commits made
after they go through staging area and the 
working directory is the directory within
the repostitory that is being currently
worked on

How can you use the staging area to make sure you 
have one commit per logical change?
You can check the staging area to see
what files have been modified or untracked or 
ready to commit.

What are some situations when branches 
would be helpful in keeping your history organized? 
How would branches help?
Branches would be useful in sitations where you
want to create various verisions of an application.
Branches help by giving you an extra branch stemming
off the master branch and you can have mutple extra branches
and you can merge them.

How do the diagrams help you visualize the branch structure?
gives visual of the branches with their commits.

What is the result of merging two branches together?
Why do we represent it in the diagram the way we do?
adds new lines from branch to orginal branch and removes lines
from orginal branch if removed from the other branch //not sure

